// Photos page variables
$textSpace: 5%;

// Custom property for padding transition
@property --paddingTrans {
    syntax: "<length>";
    inherits: true;
    initial-value: 0;
}

// Animation keyframes
@keyframes z-index-fix {
    0%, 100% {
        z-index: 1;
    }
}

@keyframes shadow-in {
    from {
        --paddingTrans: var(--padding);
    }
    to {
        --paddingTrans: calc(var(--padding)*1.25);
    }
}

@keyframes shadow-out {
    from {
        --paddingTrans: calc(var(--padding)*1.25);
    }
    to {
        --paddingTrans: var(--padding);
    }
}

// Photos container
.photos {
    $time: 750ms;

    // Layout properties
    margin-inline: auto;
    width: clamp(500px, 100%, 1000px);

    // Background overlay
    &::before {
        content: '';
        position: fixed;    
        inset: 0;
        display: block;
        opacity: 0;
        
        transition: opacity $time $time;
        @supports(transition-behavior: allow-discrete) {
            transition-behavior: allow-discrete;
        }

        z-index: -1;
        pointer-events: none;
    }

    // Fullscreen mode when item is checked
    &:has(.item .item__checkbox:checked) {
        --pad: 1rem;
        position: fixed;
        inset: var(--pad);
        margin: auto;
        aspect-ratio: 1;
        max-height: calc(100dvh - var(--pad)*2);
        z-index: 999;

        &::before {
            opacity: 1;
            background-color: rgb(from var(--bg) r g b / 0.75);
            pointer-events: all;
            z-index: 998;
        }
    }



    // Photo items
    .item {
        $main-shadow: 0 0 var(--padding);

        // Layout properties
        position: relative;
        pointer-events: all;
        overflow: clip;

        // Transitions and animations
        transition: 
            position $time,
            inset $time,
            margin $time,
            box-shadow $time,
            scale $time;
            
        animation: 
            z-index-fix $time ease,
            shadow-out $time ease;

        // Visual properties
        box-shadow: $main-shadow hsla(0, 0%, var(--color-lightness), 0);
        cursor: pointer;

        // Hidden checkbox for interaction
        &__checkbox {
            position: absolute;
            width: 0;
            height: 0;
            top: -10px;
            left: -10px;
            visibility: hidden;
        }

        // Body overflow control
        body:has(.photos .item .item__checkbox:checked) {
            overflow-y: clip;
        }

        // Fullscreen mode when checked
        &:has(.item__checkbox:checked) {
            --pad: 1rem;
            position: fixed;
            inset: var(--pad);
            margin: auto;
            aspect-ratio: 1;
            max-height: calc(100dvh - var(--pad)*2);
            z-index: 999;
        }

        // Hover effects
        &:not(:has(.item__checkbox:checked)):hover {
            --paddingTrans: calc(var(--padding)*1.25);

            position: relative;
            scale: 1.125;
            z-index: 2;
            box-shadow: $main-shadow hsla(0, 0%, var(--color-lightness), 1);

            animation: shadow-in $time ease;

            .item__info {
                opacity: 0;
                pointer-events: none;
            }
        }
        
        // Item info overlay
        &__info {
            position: absolute;
            inset: var(--padding);
            padding: calc(var(--padding)*2);
            background-color: hsla(0, 0%, var(--bg-lightness), 0.125);
            border-radius: calc(var(--borderRadius) - var(--padding));
            gap: 2rem;
            transition: opacity $time;
        }
        
        // Title and content styling
        &__title, &__content {
            padding: var(--padding) calc(var(--padding) * 1.5);
            background-color: var(--middle-color);
            border-radius: 100dvw;
            align-self: center;
            box-shadow: $main-shadow hsla(0, 0%, var(--color-lightness), 1);
        }
        
        // Title positioning
        &__title {
            &:has(+ .item__content) {
                align-self: end;
            }
            + .item__content {
                align-self: start;
            }
        }
        
        // Image styling
        &__image {
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            pointer-events: none;
        }
    }
}