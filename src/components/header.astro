---
import '../styles/components/header.scss'

import Nav from '../components/nav.astro'
import ThemeSwitcher from '../components/themeSwitcher.astro'
import { object } from 'astro:schema'

var { navItems, logo } = Astro.props

var path = Astro.url.pathname
var domain = Astro.url.origin
if (path.startsWith('/') && path !== '/') path = path.slice(1)
if (path.endsWith('/') && path !== '/') path = path.slice(0, path.length-1)

const items = import.meta.glob('../pages/*.astro', { eager: true })
const keys = Object.keys(items)
const pages = Object.values(items);

interface Link { name: string; url: string; target: string; primaryCls?: string }

var links: Link[] = []
pages.map(page => {
    var link = getLink(page)
    if (link.name === 'Home') {
        links.push(link)
    }
})
pages.map(page => {
    var link = getLink(page)
    if (link.name !== 'Home') {
        if (link.url) {
            links.push(link)
        }
    }
})

function getLink(link: any): Link {
    var lPath = link.url
    var hasHome = false
    
    var fileName = lPath
    if (fileName.startsWith('/')) fileName = fileName.slice(1)
    if (fileName.endsWith('/')) fileName = fileName.slice(0, -1)
    if (fileName === '' && !hasHome) {
        fileName = 'home'
        hasHome = true
    }
    else if (fileName.startsWith('_')) return { name: '', url: '', target: '' }
    else if (fileName.startsWith('[') && fileName.wndsWith(']')) return { name: '', url: '', target: '' }
    else if (parseInt(fileName)) return { name: '', url: '', target: '' }
    
    var nameParts: any[] = []
    if (fileName.includes('-')) nameParts = fileName.split('-')
    else nameParts = [fileName]

    nameParts = nameParts.filter(p => p !== '').map((p: string, i: number) => {
        return `${p.substring(0, 1).toUpperCase()}${p.slice(1)}`
    })

    var name = nameParts.join(' ')

    if (lPath.startsWith('//')) lPath = `https:${lPath}`
    else if (lPath === 'home') lPath = '/'
    else if (!lPath.includes('://')) lPath = `/${lPath}/`

    if (lPath.endsWith('//')) lPath = lPath.slice(0, -1)
    if (lPath.startsWith('//')) lPath = lPath.slice(1)


    var obj: Link = {
        url: lPath,
        name: name,
        target: '_self'
    }
    return obj
}

var currentPath = Astro.url.pathname
if (currentPath.endsWith('/') && currentPath !== '/') currentPath = currentPath.slice(0, -1)

---
<header id="header" class="header" role="banner">
    <a class="logo-link" href="/">
        <img class="logo" src={logo} alt="Logo" />
    </a>
    <Nav items={links} direction="horizontal" varient="header" />
    <ThemeSwitcher defaultTheme="system"/>
</header>
<script>
    var hideHeader = (new URLSearchParams(location.search)).get('hideHeader') === 'true' ? true : false
    if (hideHeader) {
        const headerElement = document.querySelector('.header') as HTMLElement;
        if (headerElement) {
            headerElement.style.display = 'none';
        }
    }
</script>