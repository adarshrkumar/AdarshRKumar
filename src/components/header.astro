---
import '../styles/components/header.scss'

import Nav from '../components/nav.astro'
import ThemeSwitcher from '../components/themeSwitcher.astro'

var { navItems, logo } = Astro.props

var path = Astro.url.pathname
// var domain = Astro.url.origin
if (path.startsWith('/') && path !== '/') path = path.slice(1)
if (path.endsWith('/') && path !== '/') path = path.slice(0, path.length - 1)

const items = import.meta.glob('../pages/*.astro', { eager: true })
// const keys = Object.keys(items)
const pages = Object.values(items);


var links: { url: string; name: string, target?: string, primaryCls?: string }[] = []
pages.forEach((page: any) => {
    var link = getLink(page)
    if (link && link.name === 'Home') links.push(link)
})
pages.forEach((page: any) => {
    var link = getLink(page)
    if (link && link.name !== 'Home' && link.url) links.push(link)
})

function getLink(link: any) {
    var lPath = link.url
    var fileName = lPath
    if (fileName.startsWith('/')) fileName = fileName.slice(1)
    if (fileName === '') fileName = 'home'
    else if (fileName.startsWith('_')) return null
    else if (fileName.startsWith('[') && fileName.endsWith(']')) return null
    else if (parseInt(fileName)) return null

    var nameParts = fileName.includes('-') ? fileName.split('-') : [fileName]
    nameParts = nameParts.map((p: string) => `${p.substring(0, 1).toUpperCase()}${p.slice(1)}`)
    var name = nameParts.join(' ')

    if (lPath.startsWith('//')) lPath = `https:${lPath}`
    else if (lPath === 'home') lPath = '/'
    else if (!lPath.includes('://')) lPath = `/${lPath}/`

    if (lPath.endsWith('//')) lPath = lPath.slice(0, -1)
    if (lPath.startsWith('//')) lPath = lPath.slice(1)

    return { url: lPath, name }
}

var currentPath = Astro.url.pathname
if (currentPath.endsWith('/') && currentPath !== '/') currentPath = currentPath.slice(0, -1)

---
<header id="header" class="header" aria-label="Site navigation">
    <a class="logo" href="/" style={`background-image: url('${logo}');`}></a>
    <div class="flex-spacer"></div>
    {
        links.map((item: { url: string; name: string; target?: string, primaryCls?: string }, i: any) => {
            var name = item.name
            var url = item.url
            
            var target = item.target || '_self'

            if (url) {
                if (url.includes('://')) {
                    var domain = url.split('://')[1]
                    if (domain.includes('/')) domain = domain.split('/')[0]
                    if (Astro.site && domain !== Astro.site.toString()) {
                        target = '_blank'
                    }
                }
                if (url.endsWith('/')) url = url.slice(0, -1)
            }
            else if (!url) {
                url = '/'

                if (name !== 'Home') {
                    url += name.toLowerCase()
                }
            }

            var primaryCls = ''
            if (url === currentPath) primaryCls = ' primary'

            item.url = url
            item.target = target
            item.primaryCls = primaryCls

            return <a href={item.url} class={`btn nav-btn${item.primaryCls}`} target={item.target || '_self'}>{item.name}</a>
        })
    }
    <ThemeSwitcher defaultTheme="system"/>
</header>
<script>
    var hideHeader = (new URLSearchParams(location.search)).get('hideHeader') === 'true';
    if (hideHeader) {
        const headerElement = document.querySelector('.header') as HTMLElement;
        if (headerElement) {
            headerElement.style.display = 'none';
        }
    }
</script>