---
// Imports

import '../styles/components/header.scss'
import NavContent from '../components/navContent.astro'
import ThemeSwitcher from '../components/themeSwitcher.astro'
import type { PageImport } from '../lib/types'

// Props and data

var { navItems, logo } = Astro.props
var path = Astro.url.pathname

// Clean up path
if (path.startsWith('/') && path !== '/') path = path.slice(1)
if (path.endsWith('/') && path !== '/') path = path.slice(0, path.length - 1)

// Page generation

const items = import.meta.glob('../pages/*.astro', { eager: true })
const pages = Object.values(items) as PageImport[];

var links: { url: string; name: string, target?: string, primaryCls?: string }[] = []

// Add Home page first
pages.forEach(page => {
    var link = getLink(page)
    if (link && link.name === 'Home') links.push(link)
})

// Add other pages
pages.forEach(page => {
    var link = getLink(page)
    if (link && link.name !== 'Home' && link.url) links.push(link)
})

// Helper functions

function getLink(link: PageImport) {
    var lPath = link.url
    if (!lPath) return null
    
    var fileName = lPath
    if (fileName.startsWith('/')) fileName = fileName.slice(1)
    if (fileName === '') fileName = 'home'
    else if (fileName.startsWith('_')) return null
    else if (fileName.startsWith('[') && fileName.endsWith(']')) return null
    else if (parseInt(fileName)) return null

    if (fileName.endsWith('/')) fileName = fileName.slice(0, -1)
    
    var nameParts = fileName.includes('-') ? fileName.split('-') : [fileName]
    nameParts = nameParts.map((p: string) => `${p.substring(0, 1).toUpperCase()}${p.slice(1)}`)
    var name = nameParts.join(' ')
    
    if (lPath.startsWith('//')) lPath = `https:${lPath}`
    else if (lPath === 'home' || !lPath) lPath = '/'
    else if (lPath && !lPath.includes('://') && !lPath.startsWith('/') && !lPath.endsWith('/')) lPath = `/${lPath}/`
    
    if (lPath.endsWith('/')) lPath = lPath.slice(0, -1)
    
    return { url: lPath, name }
}

// Current path processing

var currentPath = Astro.url.pathname
if (currentPath.endsWith('/') && currentPath !== '/') currentPath = currentPath.slice(0, -1)

---

<!-- Header Component -->

<header id="header" class="header" aria-label="Site navigation">
    <a class="logo-link" href="/">
        <img class="logo" src={logo} alt="Site logo" />
    </a>
    <NavContent items={links} />
    <ThemeSwitcher defaultTheme="system" />
</header>

<!-- Header Script -->

<script>
    var hideHeader = (new URLSearchParams(location.search)).get('hideHeader') === 'true';
    if (hideHeader) {
        const headerElement = document.querySelector('.header') as HTMLElement;
        if (headerElement) {
            headerElement.style.display = 'none';
        }
    }
</script>